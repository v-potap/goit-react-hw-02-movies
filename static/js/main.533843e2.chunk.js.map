{"version":3,"sources":["componenets/MovieCard/MovieCard.module.css","componenets/App.module.css","componenets/MovieGrid/MovieGrid.module.css","componenets/SearchBar/SearchBar.module.css","componenets/MovieCard/MovieCard.js","componenets/MovieGrid/MovieGrid.js","componenets/SearchBar/SearchBar.js","componenets/App.js","index.js"],"names":["module","exports","MovieCard","movieItem","className","styles","movieCard","src","posterUrl","alt","title","content","descr","overview","MovieGrid","movieList","movieItems","items","length","movieGrid","map","item","key","id","SearchBar","value","onFilterChange","type","input","onChange","defaultProps","App","state","filter","handleFilter","e","setState","target","this","toLowerCase","includes","filteredMovies","filterMovies","movies","containerApp","Component","ReactDOM","render","document","getElementById"],"mappings":"gHACAA,EAAOC,QAAU,CAAC,UAAY,6BAA6B,QAAU,2BAA2B,MAAQ,yBAAyB,MAAQ,2B,qBCAzID,EAAOC,QAAU,CAAC,aAAe,4B,iBCAjCD,EAAOC,QAAU,CAAC,UAAY,+B,o4aCA9BD,EAAOC,QAAU,CAAC,MAAQ,2B,2LCuBXC,EAnBG,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACnB,OACE,yBAAKC,UAAWC,IAAOC,WACrB,yBAAKC,IAAKJ,EAAUK,UAAWC,IAAKN,EAAUO,QAC9C,yBAAKN,UAAWC,IAAOM,SACrB,wBAAIP,UAAWC,IAAOK,OAAQP,EAAUO,OACxC,uBAAGN,UAAWC,IAAOO,OAAQT,EAAUU,a,mkBCL/C,IA8BeC,EA9BG,SAAAC,GAChB,IAAMC,EAAaD,EAAUE,MAC7B,OACE,oCACGD,EAAWE,OAAS,EACnB,wBAAId,UAAWC,IAAOc,WACnBH,EAAWI,IAAI,SAAAC,GAAI,OAClB,wBAAIC,IAAKD,EAAKE,IACZ,kBAAC,EAAD,CAAWpB,UAAS,KAAOkB,SAKjC,qD,yBCdFG,EAAY,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,eAC1B,OACE,2BACEC,KAAK,OACLvB,UAAWC,IAAOuB,MAClBH,MAAOA,EACPI,SAAUH,KAKhBF,EAAUM,aAAe,CACvBL,MAAO,IAQMD,QCUAO,E,2MA1BbC,MAAQ,CAAEC,OAAQ,I,EAElBC,aAAe,SAAAC,GACb,EAAKC,SAAS,CAAEH,OAAQE,EAAEE,OAAOZ,S,4EAGtBV,GAAY,IACfkB,EAAWK,KAAKN,MAAhBC,OACR,OAAOlB,EAAUkB,OAAO,SAAAZ,GAAI,OAC1BA,EAAKX,MAAM6B,cAAcC,SAASP,EAAOM,mB,+BAK3C,IAAME,EAAiBH,KAAKI,aAAaC,GACjCV,EAAWK,KAAKN,MAAhBC,OAER,OACE,yBAAK7B,UAAWC,IAAOuC,cACrB,kBAAC,EAAD,CAAWnB,MAAOQ,EAAQP,eAAgBY,KAAKJ,eAC/C,kBAAC,EAAD,CAAWjB,MAAOwB,S,GArBRI,aCJlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.533843e2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"movieCard\":\"MovieCard_movieCard__1A0Ev\",\"content\":\"MovieCard_content__20cCg\",\"title\":\"MovieCard_title__3nmub\",\"descr\":\"MovieCard_descr__2XQ6H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerApp\":\"App_containerApp__2EYyA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movieGrid\":\"MovieGrid_movieGrid__1dUjf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SearchBar_input__2qY8T\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './MovieCard.module.css';\n\nconst MovieCard = ({ movieItem }) => {\n  return (\n    <div className={styles.movieCard}>\n      <img src={movieItem.posterUrl} alt={movieItem.title} />\n      <div className={styles.content}>\n        <h2 className={styles.title}>{movieItem.title}</h2>\n        <p className={styles.descr}>{movieItem.overview}</p>\n      </div>\n    </div>\n  );\n};\n\nMovieCard.propTypes = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  posterUrl: PropTypes.string.isRequired,\n  overview: PropTypes.string.isRequired,\n}).isRequired;\n\nexport default MovieCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport MovieCard from '../MovieCard/MovieCard';\nimport styles from './MovieGrid.module.css';\n\nconst MovieGrid = movieList => {\n  const movieItems = movieList.items;\n  return (\n    <>\n      {movieItems.length > 0 ? (\n        <ul className={styles.movieGrid}>\n          {movieItems.map(item => (\n            <li key={item.id}>\n              <MovieCard movieItem={{ ...item }} />\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No matching results!</p>\n      )}\n    </>\n  );\n};\n\nMovieGrid.propTypes = {\n  movieList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      posterUrl: PropTypes.string.isRequired,\n      overview: PropTypes.string.isRequired,\n    }).isRequired,\n  ),\n};\n\nexport default MovieGrid;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './SearchBar.module.css';\n\nconst SearchBar = ({ value, onFilterChange }) => {\n  return (\n    <input\n      type=\"text\"\n      className={styles.input}\n      value={value}\n      onChange={onFilterChange}\n    />\n  );\n};\n\nSearchBar.defaultProps = {\n  value: '',\n};\n\nSearchBar.propTypes = {\n  value: PropTypes.string,\n  onFilterChange: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","import React, { Component } from 'react';\nimport styles from './App.module.css';\n\nimport MovieGrid from './MovieGrid/MovieGrid';\n\nimport movies from './movies.json';\nimport SearchBar from './SearchBar/SearchBar';\n\nclass App extends Component {\n  state = { filter: '' };\n\n  handleFilter = e => {\n    this.setState({ filter: e.target.value });\n  };\n\n  filterMovies(movieList) {\n    const { filter } = this.state;\n    return movieList.filter(item =>\n      item.title.toLowerCase().includes(filter.toLowerCase()),\n    );\n  }\n\n  render() {\n    const filteredMovies = this.filterMovies(movies);\n    const { filter } = this.state;\n\n    return (\n      <div className={styles.containerApp}>\n        <SearchBar value={filter} onFilterChange={this.handleFilter} />\n        <MovieGrid items={filteredMovies} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './componenets/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}